// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PCP.Data;

namespace PCP.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PCP.Data.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("PCP.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("PCP.Data.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("PCP.Data.Models.CPU.CPU", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int?>("CoreNameId")
                        .HasColumnType("int");

                    b.Property<byte?>("Cores")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DownloadedRatingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FirstAvailable")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Frequency")
                        .HasColumnType("smallint");

                    b.Property<bool?>("HasCoolingDevice")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntegratedGraphicId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("L1Cache")
                        .HasColumnType("int");

                    b.Property<int?>("L2Cache")
                        .HasColumnType("int");

                    b.Property<int?>("L3Cache")
                        .HasColumnType("int");

                    b.Property<int?>("LithographyId")
                        .HasColumnType("int");

                    b.Property<byte?>("MemoryChannel")
                        .HasColumnType("tinyint");

                    b.Property<int?>("MemorySpeedId")
                        .HasColumnType("int");

                    b.Property<int?>("MemoryTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("PCIELanes")
                        .HasColumnType("tinyint");

                    b.Property<float?>("PCIERevision")
                        .HasColumnType("real");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("int");

                    b.Property<bool?>("SixtyFourBitSupport")
                        .HasColumnType("bit");

                    b.Property<int?>("SocketId")
                        .HasColumnType("int");

                    b.Property<short?>("ThermalDesignPower")
                        .HasColumnType("smallint");

                    b.Property<short?>("Threads")
                        .HasColumnType("smallint");

                    b.Property<short?>("TurboFrequency")
                        .HasColumnType("smallint");

                    b.Property<bool?>("VirtualizationSupport")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CoreNameId");

                    b.HasIndex("DownloadedRatingId");

                    b.HasIndex("IntegratedGraphicId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LithographyId");

                    b.HasIndex("MemorySpeedId");

                    b.HasIndex("MemoryTypeId");

                    b.HasIndex("SeriesId");

                    b.HasIndex("SocketId");

                    b.ToTable("CPUs");
                });

            modelBuilder.Entity("PCP.Data.Models.CPU.CPUUserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CPUId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CPUId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("CPUUserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.CPUCooler.CPUAirCooler", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("CoolerBearingTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CoolerLEDId")
                        .HasColumnType("int");

                    b.Property<int?>("CoolerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DownloadedRatingId")
                        .HasColumnType("int");

                    b.Property<string>("FanDimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("FanSize")
                        .HasColumnType("smallint");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstAvailable")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeatsinkDimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeatsinkMaterialId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("MaxAirFlow")
                        .HasColumnType("real");

                    b.Property<byte?>("MaxHeight")
                        .HasColumnType("tinyint");

                    b.Property<float?>("MaxNoiseLevel")
                        .HasColumnType("real");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("PowerConnectorPins")
                        .HasColumnType("tinyint");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<short?>("RPM")
                        .HasColumnType("smallint");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("ColorId");

                    b.HasIndex("CoolerBearingTypeId");

                    b.HasIndex("CoolerLEDId");

                    b.HasIndex("CoolerTypeId");

                    b.HasIndex("DownloadedRatingId");

                    b.HasIndex("HeatsinkMaterialId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SeriesId");

                    b.ToTable("CPUAirCoolers");
                });

            modelBuilder.Entity("PCP.Data.Models.CPUCooler.CPUAirCoolerSocket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CPUAirCoolerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("SocketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CPUAirCoolerId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SocketId");

                    b.ToTable("CPUAirCoolerSockets");
                });

            modelBuilder.Entity("PCP.Data.Models.CPUCooler.CPUAirCoolerUserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CPUAirCoolerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CPUCoolerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CPUAirCoolerId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("CPUAirCoolerUserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.CPUCooler.CoolerBearingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("CoolerBearingTypes");
                });

            modelBuilder.Entity("PCP.Data.Models.CPUCooler.CoolerLEDType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("CoolerLEDTypes");
                });

            modelBuilder.Entity("PCP.Data.Models.CPUCooler.CoolerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("CoolerTypes");
                });

            modelBuilder.Entity("PCP.Data.Models.Case.Case", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CasePowerSupplyPosition")
                        .HasColumnType("int");

                    b.Property<int?>("CaseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Depth")
                        .HasColumnType("real");

                    b.Property<int?>("DownloadedRatingId")
                        .HasColumnType("int");

                    b.Property<byte?>("DriveBay2point5")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("DriveBay3point5")
                        .HasColumnType("tinyint");

                    b.Property<string>("DustFilters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("ExpansionSlots")
                        .HasColumnType("tinyint");

                    b.Property<string>("FanOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstAvailable")
                        .HasColumnType("datetime2");

                    b.Property<string>("FrontPorts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasPowerSupply")
                        .HasColumnType("bit");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<short?>("MaxCPUCoolerHeight")
                        .HasColumnType("smallint");

                    b.Property<short?>("MaxGPULength")
                        .HasColumnType("smallint");

                    b.Property<short?>("MaxPSULenght")
                        .HasColumnType("smallint");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<string>("RadioatorOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("int");

                    b.Property<bool?>("SidePanelWindow")
                        .HasColumnType("bit");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.Property<float?>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CaseTypeId");

                    b.HasIndex("ColorId");

                    b.HasIndex("DownloadedRatingId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SeriesId");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("PCP.Data.Models.Case.CaseFormFactor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormFactorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("FormFactorId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("CaseFormFactors");
                });

            modelBuilder.Entity("PCP.Data.Models.Case.CaseMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("MaterialId");

                    b.ToTable("CaseMaterials");
                });

            modelBuilder.Entity("PCP.Data.Models.Case.CaseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("CaseTypes");
                });

            modelBuilder.Entity("PCP.Data.Models.Case.CaseUserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("CaseUserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("PCP.Data.Models.CoreName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("CoreNames");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.DiskForUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Usages");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.HDD", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CacheKb")
                        .HasColumnType("int");

                    b.Property<short?>("CapacityGb")
                        .HasColumnType("smallint");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DownloadedRatingId")
                        .HasColumnType("int");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstAvailable")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FormFactorId")
                        .HasColumnType("int");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InterfaceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("Length")
                        .HasColumnType("real");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<short?>("RevolutionsPerMinute")
                        .HasColumnType("smallint");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("int");

                    b.Property<int?>("UsageId")
                        .HasColumnType("int");

                    b.Property<float?>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("DownloadedRatingId");

                    b.HasIndex("FormFactorId");

                    b.HasIndex("InterfaceId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SeriesId");

                    b.HasIndex("UsageId");

                    b.ToTable("HDDs");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.HDDUserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("HDDId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HDDId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("HDDUserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.MemoryComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("MemoryComponents");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.SSD", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivePowerConsumption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CacheKb")
                        .HasColumnType("int");

                    b.Property<short?>("CapacityGb")
                        .HasColumnType("smallint");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DownloadedRatingId")
                        .HasColumnType("int");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstAvailable")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FormFactorId")
                        .HasColumnType("int");

                    b.Property<string>("FourKBRandomRead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FourKBRandomWrite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.Property<string>("IdlePowerComsumtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InterfaceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("Length")
                        .HasColumnType("real");

                    b.Property<short?>("MaxSequentialReadMBps")
                        .HasColumnType("smallint");

                    b.Property<short?>("MaxSequentialWriteMBps")
                        .HasColumnType("smallint");

                    b.Property<int?>("MeanTimeBetweenFailures")
                        .HasColumnType("int");

                    b.Property<int?>("MemoryComponentId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("int");

                    b.Property<int?>("UsageId")
                        .HasColumnType("int");

                    b.Property<float?>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("DownloadedRatingId");

                    b.HasIndex("FormFactorId");

                    b.HasIndex("InterfaceId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("MemoryComponentId");

                    b.HasIndex("SeriesId");

                    b.HasIndex("UsageId");

                    b.ToTable("SSDs");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.SSDUserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<string>("SSDId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SSDId");

                    b.HasIndex("UserId");

                    b.ToTable("SSDUserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.FormFactor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("FormFactors");
                });

            modelBuilder.Entity("PCP.Data.Models.GPU.GPU", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<float?>("DirectXVersion")
                        .HasColumnType("real");

                    b.Property<int?>("DownloadedRatingId")
                        .HasColumnType("int");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstAvailable")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GPUChipsetId")
                        .HasColumnType("int");

                    b.Property<int?>("GPUInterfaceId")
                        .HasColumnType("int");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("Length")
                        .HasColumnType("real");

                    b.Property<byte?>("MemoryBandwidth")
                        .HasColumnType("tinyint");

                    b.Property<short?>("MemoryInterface")
                        .HasColumnType("smallint");

                    b.Property<int?>("MemorySize")
                        .HasColumnType("int");

                    b.Property<int?>("MemoryTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float?>("OpenGLVersion")
                        .HasColumnType("real");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("int");

                    b.Property<float?>("SlotWidth")
                        .HasColumnType("real");

                    b.Property<short?>("ThermalDesignPower")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("DownloadedRatingId");

                    b.HasIndex("GPUChipsetId");

                    b.HasIndex("GPUInterfaceId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("MemoryTypeId");

                    b.HasIndex("SeriesId");

                    b.ToTable("GPUs");
                });

            modelBuilder.Entity("PCP.Data.Models.GPU.GPUChipset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<short?>("CoreClock")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GPUCoreId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<short?>("TurboClock")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("GPUCoreId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("GPUChipsets");
                });

            modelBuilder.Entity("PCP.Data.Models.GPU.GPUCore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<short?>("Cores")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SeriesId");

                    b.ToTable("GPUCores");
                });

            modelBuilder.Entity("PCP.Data.Models.GPU.GPUPort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("GPUId")
                        .HasColumnType("int");

                    b.Property<string>("GPUId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PortId")
                        .HasColumnType("int");

                    b.Property<byte>("Quantity")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("GPUId1");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PortId");

                    b.ToTable("GPUPorts");
                });

            modelBuilder.Entity("PCP.Data.Models.GPU.GPUUserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GPUId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GPUId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("GPUUserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.IntegratedGraphic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<short?>("BaseFrequency")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<short?>("MaxFrequency")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("IntegratedGraphics");
                });

            modelBuilder.Entity("PCP.Data.Models.Interface", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Interfaces");
                });

            modelBuilder.Entity("PCP.Data.Models.Lithography", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Lithographies");
                });

            modelBuilder.Entity("PCP.Data.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("PCP.Data.Models.Memory.Memory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CapacityPerModule")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<float?>("ColumnAddressStrobeLatency")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DownloadedRatingId")
                        .HasColumnType("int");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstAvailable")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HeatSpreader")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MemorySpeedId")
                        .HasColumnType("int");

                    b.Property<int?>("MemoryTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("NumberOfModules")
                        .HasColumnType("tinyint");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("int");

                    b.Property<string>("Timings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Voltage")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("DownloadedRatingId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("MemorySpeedId");

                    b.HasIndex("MemoryTypeId");

                    b.HasIndex("SeriesId");

                    b.ToTable("Memories");
                });

            modelBuilder.Entity("PCP.Data.Models.Memory.MemoryUserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MemoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("MemoryId");

                    b.HasIndex("UserId");

                    b.ToTable("MemoryUserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.MemorySpeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Speed")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("MemorySpeeds");
                });

            modelBuilder.Entity("PCP.Data.Models.MemoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("MemoryTypes");
                });

            modelBuilder.Entity("PCP.Data.Models.Motherboard.AudioChipset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float?>("Channels")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("AudioChipsets");
                });

            modelBuilder.Entity("PCP.Data.Models.Motherboard.LanChipset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("LanChipsets");
                });

            modelBuilder.Entity("PCP.Data.Models.Motherboard.Motherboard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AudioChipsetId")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int?>("ChipsetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DownloadedRatingId")
                        .HasColumnType("int");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstAvailable")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FormFactorId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LanChipsetId")
                        .HasColumnType("int");

                    b.Property<float?>("Length")
                        .HasColumnType("real");

                    b.Property<int?>("MaxMemorySupport")
                        .HasColumnType("int");

                    b.Property<byte>("Mdot2")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MemoryChannel")
                        .HasColumnType("tinyint");

                    b.Property<int?>("MemorySlots")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte>("PCIe3x16")
                        .HasColumnType("tinyint");

                    b.Property<byte>("PCIe4x16")
                        .HasColumnType("tinyint");

                    b.Property<byte>("PCIex1")
                        .HasColumnType("tinyint");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<string>("RearPanelPorts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Sata3Gbs")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Sata6Gbs")
                        .HasColumnType("tinyint");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("int");

                    b.Property<int?>("SocketId")
                        .HasColumnType("int");

                    b.Property<float?>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AudioChipsetId");

                    b.HasIndex("BrandId");

                    b.HasIndex("ChipsetId");

                    b.HasIndex("DownloadedRatingId");

                    b.HasIndex("FormFactorId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LanChipsetId");

                    b.HasIndex("SeriesId");

                    b.HasIndex("SocketId");

                    b.ToTable("Motherboards");
                });

            modelBuilder.Entity("PCP.Data.Models.Motherboard.MotherboardMemoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MemorySpeedId")
                        .HasColumnType("int");

                    b.Property<int>("MemoryTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherboardId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("MemorySpeedId");

                    b.HasIndex("MemoryTypeId");

                    b.HasIndex("MotherboardId");

                    b.ToTable("MotherboardMemoryTypes");
                });

            modelBuilder.Entity("PCP.Data.Models.Motherboard.MotherboardUserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherboardId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("MotherboardId");

                    b.HasIndex("UserId");

                    b.ToTable("MotherboardUserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.Motherboard.MothrboardChipset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("MothrboardChipset");
                });

            modelBuilder.Entity("PCP.Data.Models.Port", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("PCP.Data.Models.Rating.DownloadedRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiveStarVotes")
                        .HasColumnType("int");

                    b.Property<int>("FourStarVotes")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OneStarVotes")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThreeStarVotes")
                        .HasColumnType("int");

                    b.Property<int>("TwoStarVotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DownloadedRating");
                });

            modelBuilder.Entity("PCP.Data.Models.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("PCP.Data.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("PCP.Data.Models.Socket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Sockets");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("PCP.Data.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PCP.Data.Models.ApplicationUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PCP.Data.Models.ApplicationUser", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("PCP.Data.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PCP.Data.Models.ApplicationUser", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PCP.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PCP.Data.Models.CPU.CPU", b =>
                {
                    b.HasOne("PCP.Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("PCP.Data.Models.CoreName", "CoreName")
                        .WithMany()
                        .HasForeignKey("CoreNameId");

                    b.HasOne("PCP.Data.Models.Rating.DownloadedRating", "DownloadedRating")
                        .WithMany()
                        .HasForeignKey("DownloadedRatingId");

                    b.HasOne("PCP.Data.Models.IntegratedGraphic", "IntegratedGraphic")
                        .WithMany()
                        .HasForeignKey("IntegratedGraphicId");

                    b.HasOne("PCP.Data.Models.Lithography", "Lithography")
                        .WithMany()
                        .HasForeignKey("LithographyId");

                    b.HasOne("PCP.Data.Models.MemorySpeed", "MemorySpeed")
                        .WithMany()
                        .HasForeignKey("MemorySpeedId");

                    b.HasOne("PCP.Data.Models.MemoryType", "MemoryType")
                        .WithMany()
                        .HasForeignKey("MemoryTypeId");

                    b.HasOne("PCP.Data.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.HasOne("PCP.Data.Models.Socket", "Socket")
                        .WithMany()
                        .HasForeignKey("SocketId");

                    b.Navigation("Brand");

                    b.Navigation("CoreName");

                    b.Navigation("DownloadedRating");

                    b.Navigation("IntegratedGraphic");

                    b.Navigation("Lithography");

                    b.Navigation("MemorySpeed");

                    b.Navigation("MemoryType");

                    b.Navigation("Series");

                    b.Navigation("Socket");
                });

            modelBuilder.Entity("PCP.Data.Models.CPU.CPUUserRating", b =>
                {
                    b.HasOne("PCP.Data.Models.CPU.CPU", "CPU")
                        .WithMany("UserRatings")
                        .HasForeignKey("CPUId");

                    b.HasOne("PCP.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CPU");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCP.Data.Models.CPUCooler.CPUAirCooler", b =>
                {
                    b.HasOne("PCP.Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("PCP.Data.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("PCP.Data.Models.CPUCooler.CoolerBearingType", "CoolerBearingType")
                        .WithMany()
                        .HasForeignKey("CoolerBearingTypeId");

                    b.HasOne("PCP.Data.Models.CPUCooler.CoolerLEDType", "CoolerLED")
                        .WithMany()
                        .HasForeignKey("CoolerLEDId");

                    b.HasOne("PCP.Data.Models.CPUCooler.CoolerType", "CoolerType")
                        .WithMany()
                        .HasForeignKey("CoolerTypeId");

                    b.HasOne("PCP.Data.Models.Rating.DownloadedRating", "DownloadedRating")
                        .WithMany()
                        .HasForeignKey("DownloadedRatingId");

                    b.HasOne("PCP.Data.Models.Material", "HeatsinkMaterial")
                        .WithMany()
                        .HasForeignKey("HeatsinkMaterialId");

                    b.HasOne("PCP.Data.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.Navigation("Brand");

                    b.Navigation("Color");

                    b.Navigation("CoolerBearingType");

                    b.Navigation("CoolerLED");

                    b.Navigation("CoolerType");

                    b.Navigation("DownloadedRating");

                    b.Navigation("HeatsinkMaterial");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("PCP.Data.Models.CPUCooler.CPUAirCoolerSocket", b =>
                {
                    b.HasOne("PCP.Data.Models.CPUCooler.CPUAirCooler", "CPUAirCooler")
                        .WithMany("Sockets")
                        .HasForeignKey("CPUAirCoolerId");

                    b.HasOne("PCP.Data.Models.Socket", "Socket")
                        .WithMany()
                        .HasForeignKey("SocketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CPUAirCooler");

                    b.Navigation("Socket");
                });

            modelBuilder.Entity("PCP.Data.Models.CPUCooler.CPUAirCoolerUserRating", b =>
                {
                    b.HasOne("PCP.Data.Models.CPUCooler.CPUAirCooler", "CPUAirCooler")
                        .WithMany("UserRatings")
                        .HasForeignKey("CPUAirCoolerId");

                    b.HasOne("PCP.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CPUAirCooler");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCP.Data.Models.Case.Case", b =>
                {
                    b.HasOne("PCP.Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("PCP.Data.Models.Case.CaseType", "CaseType")
                        .WithMany()
                        .HasForeignKey("CaseTypeId");

                    b.HasOne("PCP.Data.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("PCP.Data.Models.Rating.DownloadedRating", "DownloadedRating")
                        .WithMany()
                        .HasForeignKey("DownloadedRatingId");

                    b.HasOne("PCP.Data.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.Navigation("Brand");

                    b.Navigation("CaseType");

                    b.Navigation("Color");

                    b.Navigation("DownloadedRating");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("PCP.Data.Models.Case.CaseFormFactor", b =>
                {
                    b.HasOne("PCP.Data.Models.Case.Case", "Case")
                        .WithMany("CaseFormFactors")
                        .HasForeignKey("CaseId");

                    b.HasOne("PCP.Data.Models.FormFactor", "FormFactor")
                        .WithMany()
                        .HasForeignKey("FormFactorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("FormFactor");
                });

            modelBuilder.Entity("PCP.Data.Models.Case.CaseMaterial", b =>
                {
                    b.HasOne("PCP.Data.Models.Case.Case", "Case")
                        .WithMany("CaseMaterials")
                        .HasForeignKey("CaseId");

                    b.HasOne("PCP.Data.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("PCP.Data.Models.Case.CaseUserRating", b =>
                {
                    b.HasOne("PCP.Data.Models.Case.Case", "Case")
                        .WithMany("UserRatings")
                        .HasForeignKey("CaseId");

                    b.HasOne("PCP.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Case");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.HDD", b =>
                {
                    b.HasOne("PCP.Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("PCP.Data.Models.Rating.DownloadedRating", "DownloadedRating")
                        .WithMany()
                        .HasForeignKey("DownloadedRatingId");

                    b.HasOne("PCP.Data.Models.FormFactor", "FormFactor")
                        .WithMany()
                        .HasForeignKey("FormFactorId");

                    b.HasOne("PCP.Data.Models.Interface", "Interface")
                        .WithMany()
                        .HasForeignKey("InterfaceId");

                    b.HasOne("PCP.Data.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.HasOne("PCP.Data.Models.Drive.DiskForUsage", "Usage")
                        .WithMany()
                        .HasForeignKey("UsageId");

                    b.Navigation("Brand");

                    b.Navigation("DownloadedRating");

                    b.Navigation("FormFactor");

                    b.Navigation("Interface");

                    b.Navigation("Series");

                    b.Navigation("Usage");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.HDDUserRating", b =>
                {
                    b.HasOne("PCP.Data.Models.Drive.HDD", "HDD")
                        .WithMany("UserRatings")
                        .HasForeignKey("HDDId");

                    b.HasOne("PCP.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("HDD");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.SSD", b =>
                {
                    b.HasOne("PCP.Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("PCP.Data.Models.Rating.DownloadedRating", "DownloadedRating")
                        .WithMany()
                        .HasForeignKey("DownloadedRatingId");

                    b.HasOne("PCP.Data.Models.FormFactor", "FormFactor")
                        .WithMany()
                        .HasForeignKey("FormFactorId");

                    b.HasOne("PCP.Data.Models.Interface", "Interface")
                        .WithMany()
                        .HasForeignKey("InterfaceId");

                    b.HasOne("PCP.Data.Models.Drive.MemoryComponent", "MemoryComponent")
                        .WithMany()
                        .HasForeignKey("MemoryComponentId");

                    b.HasOne("PCP.Data.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.HasOne("PCP.Data.Models.Drive.DiskForUsage", "Usage")
                        .WithMany()
                        .HasForeignKey("UsageId");

                    b.Navigation("Brand");

                    b.Navigation("DownloadedRating");

                    b.Navigation("FormFactor");

                    b.Navigation("Interface");

                    b.Navigation("MemoryComponent");

                    b.Navigation("Series");

                    b.Navigation("Usage");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.SSDUserRating", b =>
                {
                    b.HasOne("PCP.Data.Models.Drive.SSD", "SSD")
                        .WithMany("UserRatings")
                        .HasForeignKey("SSDId");

                    b.HasOne("PCP.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("SSD");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCP.Data.Models.GPU.GPU", b =>
                {
                    b.HasOne("PCP.Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("PCP.Data.Models.Rating.DownloadedRating", "DownloadedRating")
                        .WithMany()
                        .HasForeignKey("DownloadedRatingId");

                    b.HasOne("PCP.Data.Models.GPU.GPUChipset", "GPUChipset")
                        .WithMany()
                        .HasForeignKey("GPUChipsetId");

                    b.HasOne("PCP.Data.Models.Interface", "GPUInterface")
                        .WithMany()
                        .HasForeignKey("GPUInterfaceId");

                    b.HasOne("PCP.Data.Models.MemoryType", "MemoryType")
                        .WithMany()
                        .HasForeignKey("MemoryTypeId");

                    b.HasOne("PCP.Data.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.Navigation("Brand");

                    b.Navigation("DownloadedRating");

                    b.Navigation("GPUChipset");

                    b.Navigation("GPUInterface");

                    b.Navigation("MemoryType");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("PCP.Data.Models.GPU.GPUChipset", b =>
                {
                    b.HasOne("PCP.Data.Models.GPU.GPUCore", "GPUCore")
                        .WithMany()
                        .HasForeignKey("GPUCoreId");

                    b.Navigation("GPUCore");
                });

            modelBuilder.Entity("PCP.Data.Models.GPU.GPUCore", b =>
                {
                    b.HasOne("PCP.Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PCP.Data.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.Navigation("Brand");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("PCP.Data.Models.GPU.GPUPort", b =>
                {
                    b.HasOne("PCP.Data.Models.GPU.GPU", "GPU")
                        .WithMany("GPUPorts")
                        .HasForeignKey("GPUId1");

                    b.HasOne("PCP.Data.Models.Port", "Port")
                        .WithMany()
                        .HasForeignKey("PortId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GPU");

                    b.Navigation("Port");
                });

            modelBuilder.Entity("PCP.Data.Models.GPU.GPUUserRating", b =>
                {
                    b.HasOne("PCP.Data.Models.GPU.GPU", "GPU")
                        .WithMany("UserRatings")
                        .HasForeignKey("GPUId");

                    b.HasOne("PCP.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("GPU");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCP.Data.Models.Memory.Memory", b =>
                {
                    b.HasOne("PCP.Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("PCP.Data.Models.Rating.DownloadedRating", "DownloadedRating")
                        .WithMany()
                        .HasForeignKey("DownloadedRatingId");

                    b.HasOne("PCP.Data.Models.MemorySpeed", "MemorySpeed")
                        .WithMany()
                        .HasForeignKey("MemorySpeedId");

                    b.HasOne("PCP.Data.Models.MemoryType", "MemoryType")
                        .WithMany()
                        .HasForeignKey("MemoryTypeId");

                    b.HasOne("PCP.Data.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.Navigation("Brand");

                    b.Navigation("DownloadedRating");

                    b.Navigation("MemorySpeed");

                    b.Navigation("MemoryType");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("PCP.Data.Models.Memory.MemoryUserRating", b =>
                {
                    b.HasOne("PCP.Data.Models.Memory.Memory", "Memory")
                        .WithMany("UserRatings")
                        .HasForeignKey("MemoryId");

                    b.HasOne("PCP.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Memory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCP.Data.Models.Motherboard.Motherboard", b =>
                {
                    b.HasOne("PCP.Data.Models.Motherboard.AudioChipset", "AudioChipset")
                        .WithMany()
                        .HasForeignKey("AudioChipsetId");

                    b.HasOne("PCP.Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("PCP.Data.Models.Motherboard.MothrboardChipset", "Chipset")
                        .WithMany()
                        .HasForeignKey("ChipsetId");

                    b.HasOne("PCP.Data.Models.Rating.DownloadedRating", "DownloadedRating")
                        .WithMany()
                        .HasForeignKey("DownloadedRatingId");

                    b.HasOne("PCP.Data.Models.FormFactor", "FormFactor")
                        .WithMany()
                        .HasForeignKey("FormFactorId");

                    b.HasOne("PCP.Data.Models.Motherboard.LanChipset", "LanChipset")
                        .WithMany()
                        .HasForeignKey("LanChipsetId");

                    b.HasOne("PCP.Data.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.HasOne("PCP.Data.Models.Socket", "Socket")
                        .WithMany()
                        .HasForeignKey("SocketId");

                    b.Navigation("AudioChipset");

                    b.Navigation("Brand");

                    b.Navigation("Chipset");

                    b.Navigation("DownloadedRating");

                    b.Navigation("FormFactor");

                    b.Navigation("LanChipset");

                    b.Navigation("Series");

                    b.Navigation("Socket");
                });

            modelBuilder.Entity("PCP.Data.Models.Motherboard.MotherboardMemoryType", b =>
                {
                    b.HasOne("PCP.Data.Models.MemorySpeed", "MemorySpeed")
                        .WithMany()
                        .HasForeignKey("MemorySpeedId");

                    b.HasOne("PCP.Data.Models.MemoryType", "MemoryType")
                        .WithMany()
                        .HasForeignKey("MemoryTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PCP.Data.Models.Motherboard.Motherboard", "Motherboard")
                        .WithMany("MotherboardMemoryType")
                        .HasForeignKey("MotherboardId");

                    b.Navigation("MemorySpeed");

                    b.Navigation("MemoryType");

                    b.Navigation("Motherboard");
                });

            modelBuilder.Entity("PCP.Data.Models.Motherboard.MotherboardUserRating", b =>
                {
                    b.HasOne("PCP.Data.Models.Motherboard.Motherboard", "Motherboard")
                        .WithMany("UserRatings")
                        .HasForeignKey("MotherboardId");

                    b.HasOne("PCP.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Motherboard");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCP.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("PCP.Data.Models.CPU.CPU", b =>
                {
                    b.Navigation("UserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.CPUCooler.CPUAirCooler", b =>
                {
                    b.Navigation("Sockets");

                    b.Navigation("UserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.Case.Case", b =>
                {
                    b.Navigation("CaseFormFactors");

                    b.Navigation("CaseMaterials");

                    b.Navigation("UserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.HDD", b =>
                {
                    b.Navigation("UserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.Drive.SSD", b =>
                {
                    b.Navigation("UserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.GPU.GPU", b =>
                {
                    b.Navigation("GPUPorts");

                    b.Navigation("UserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.Memory.Memory", b =>
                {
                    b.Navigation("UserRatings");
                });

            modelBuilder.Entity("PCP.Data.Models.Motherboard.Motherboard", b =>
                {
                    b.Navigation("MotherboardMemoryType");

                    b.Navigation("UserRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
